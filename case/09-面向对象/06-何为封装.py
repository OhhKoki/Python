"""
    1、什么是封装？
        封装就是指将现实世界事物的属性和行为封装到类中的成员变量和成员方法，从而完成程序对现实世界事物的描述；

        即：封装是一种思想，是一种将现实世界事物映射到程序类的思想

    2、私有成员
        既然现实世界事物有不公开的属性和行为，那么作为现实事物在程序中映射的类，也应该支持；

        在 Python 中，类中提供了私有成员的形式来支持：
            私有成员变量
            私有成员方法

        私有成员定义的方式很简单，只需要在成员名前两个下划线即可，例如：
            私有成员变量：__变量名
            私有成员方法：__方法名

    3、特别注意
        01）在类的外部，无法直接访问类的私有成员
        02）在类的内部，私有成员和公有成员间可以相互访问

    4、有何意义
        在类中提供仅供内部使用的属性和方法，而不对外开放（类对象无法使用）

"""


# 定义一个手机类，内含私有成员变量和私成员方法，这些私有成员，在类的外部无法直接访问，但在类的内部是可以相互访问的！！！
class Phone:
    # 定义一个私有成员变量，用于表示当前的手机电压
    __current_voltage = None

    def __init__(self, current_voltage):
        self.__current_voltage = current_voltage

    # 定义一个私有成员方法
    def __keep_single_core(self):
        print("让 CPU 以单核模式运行")

    def call_by_5g(self):
        if self.__current_voltage >= 20:
            print("电压符合 5g 条件，手机开启 5g 通话")
        else:
            self.__keep_single_core()
            print("电压不足，无法使用 5g 进行通话，手机以自动单核运行进行省电")


phone = Phone(10)
phone.call_by_5g()
