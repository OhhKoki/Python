"""
    1）其实字符串就是一个容器，例如：name = "Tim" 类似于 name = ["T", "i", "m"]

    2）字符串是不可修改的！！！

    3）字符串的常用方法：
        01）字符串.index(子串)：查找子串在目标字符串中的下标索引值；
        02）字符串.replace(子串1, 子串2)：将目标字符串内的 '子串1' 全部替换成 '子串2'，注意，是得到一个新的字符串，而不是修改；
        03）字符串.split(分隔符)：按照指定分隔符，将目标字符串拆分成多个子串，并存入列表对象中；
        04）字符串.strip(子串)：去掉目标字符串前后的指定子串，注意，子串默认值为空格，即空参时去除目标字符串前后的空格；
        05）字符串.count(子串)：统计子串在目标字符串中出现的次数；
        06）len(字符串)：获取字符串的长度；
"""
var01 = "hello world python"

# 可以通过循环遍历所有元素
for item in var01:
    print(item)

print("-----")

# 可以通过索引获取指定元素
var02 = var01[4]
var03 = var01[-1]
print(f"从 var01 中获取索引为 4 处的元素：{var02}，从 var01 中获取索引为 -1 处的元素：{var03}")

# 注意，字符串是不可修改的！！！
# var01[0] = "T"   # TypeError: 'str' object does not support item assignment

"""
    字符串的常用方法：
        01）字符串.index(子串)：查找子串在目标字符串中的下标索引值；
        02）字符串.replace(子串1, 子串2)：将目标字符串内的 '子串1' 全部替换成 '子串2'，注意，是得到一个新的字符串，而不是修改；
        03）字符串.split(分隔符)：按照指定分隔符，将目标字符串拆分成多个子串，并存入列表对象中；
        04）字符串.strip(子串)：去掉目标字符串前后的指定子串，注意，子串默认值为空格，即空参时去除目标字符串前后的空格；
        05）字符串.count(子串)：统计子串在目标字符串中出现的次数；
        06）len(字符串)：获取字符串的长度；
"""

# 字符串.index(子串)：查找子串在目标字符串中的下标索引值
var04 = var01.index("world")
print(f"查找子串在目标字符串中的下标索引值：{var04}")

# 字符串.replace(子串1, 子串2)：将目标字符串内的 '子串1' 全部替换成 '子串2'，注意，是得到一个新的字符串，而不是修改
var05 = var01.replace("hello", "nihao")
print(f"字符串替换：{var05}")

# 字符串.split(分隔符)：按照指定分隔符，将目标字符串拆分成多个子串，并存入列表对象中
var06 = var01.split(" ")
print(f"字符串分割：{var06}")

# 字符串.strip(子串)：去掉目标字符串前后的指定子串，注意，子串默认值为空格，即空参时去除目标字符串前后的空格
var07 = " hello world "
var08 = var07.strip()
print(f"去掉目标字符串前后的空格：{var08}")

# 字符串.strip(子串)：去掉目标字符串前后的指定子串，注意，子串默认值为空格，即空参时去除目标字符串前后的空格
var09 = "12hello world12"
var10 = var09.strip("21")   # 注意，'21' 会拆分成 '2' 和 '1' 进行被别去除
print(f"去掉目标字符串前后的指定子串：{var10}")

# 字符串.count(子串)：统计子串在目标字符串中出现的次数
var11 = var01.count("wo")
print(f"统计子串在目标字符串中出现的次数：{var11}")

# len(字符串)：获取字符串的长度
var12 = len(var01)
print(f"len(字符串)：获取字符串的长度：{var12}")

